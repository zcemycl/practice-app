{"version":3,"sources":["components/App.js","index.js"],"names":["App","useState","val","setVal","arr","setArr","io","connect","reconnection","on","msg","console","log","number","useEffect","fetch","then","res","json","data","style","height","labels","datasets","label","backgroundColor","width","options","maintainAspectRatio","textAlign","Slider","value","onChange","e","href","reactContentRoot","document","getElementById","ReactDOM","render"],"mappings":"4NAqFeA,EAhFH,WAAO,IAAD,EACOC,mBAAS,IADhB,mBACPC,EADO,KACHC,EADG,OAKOF,mBAAS,IALhB,mBAKPG,EALO,KAKHC,EALG,OAMSJ,mBAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,IAN7B,6BAiCd,OAzBeK,IAAGC,QAAQ,+CAClB,CAACC,cAAc,IAIhBC,GAAG,aAAY,SAACC,GACnBC,QAAQC,IAAIF,EAAIG,WAUpBC,qBAAU,WACRC,MAAM,4CACGC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAE,GACJb,EAAOa,EAAKC,WAEtB,IAEFR,QAAQC,IAAIR,GACJ,gCACJ,6BACA,8CAGA,uDACA,sBAAKgB,MAAO,CAACC,OAAO,QAApB,UACA,cAAC,MAAD,CACIF,KAAM,CACFG,OAAQ,CAAC,MAAM,OAAO,SAAS,QAAQ,SAAS,UAChDC,SAAU,CAAC,CACPC,MAAO,aACPL,KAAM,CAACjB,EAAI,GAAG,EAAE,EAAE,EAAE,GACpBuB,gBAAiB,CAAC,MAAM,OAAO,SAAS,QAAQ,SAAS,aAIjEJ,OAAQ,IACRK,MAAO,IACPC,QAAS,CAACC,qBAAqB,KAEnC,qBAAKR,MAAO,CAACS,UAAU,SAASH,MAAM,QAAtC,SACA,cAACI,EAAA,EAAD,CAAQC,MAAO7B,EAAK8B,SArDN,SAACC,EAAEd,GACjBhB,EAAOgB,WAuDP,uBACA,kDAAoB,mBAAGe,KAAK,2CAAR,yDACpB,qBAAKd,MAAO,CAACC,OAAO,QAApB,SACA,cAAC,MAAD,CACIF,KAAM,CACFG,OAAQ,CAAC,MAAM,OAAO,SAAS,QAAQ,SAAS,UAChDC,SAAU,CAAC,CACPC,MAAO,aACPL,KAAMf,EACNqB,gBAAiB,CAAC,MAAM,OAAO,SAAS,QAAQ,SAAS,aAIjEJ,OAAQ,IACRK,MAAO,IACPC,QAAS,CAACC,qBAAqB,WC1ErCO,EAAmBC,SAASC,eAAe,QAEjDC,IAASC,OAAO,cAAC,EAAD,IAAQJ,K","file":"static/js/main.a8cb13a1.chunk.js","sourcesContent":["import React,{ useState,useEffect } from \"react\";\nimport { Bar } from 'react-chartjs-2'; \nimport { Slider } from \"@material-ui/core\";\nimport io from 'socket.io-client';\n\nconst App = () => {\n    const [val,setVal] = useState(12)\n    const updateRange=(e,data)=>{\n        setVal(data)\n    }\n    const [arr,setArr] = useState([])\n    const [arr2,setArr2] = useState([0,0,0,0,0,0])\n    var tmparr2 = arr2;\n    const socket = io.connect('https://hidden-dusk-28735.herokuapp.com/test',\n            {reconnection: true, \n            //transports: ['websocket']\n    });\n\n    socket.on('newnumber',(msg)=>{\n        console.log(msg.number);\n        //tmparr2 = arr2;\n        //if (tmparr2.length>=6){\n        //    tmparr2.shift()\n        //}\n        //tmparr2.push(msg.number);\n        //setArr2(tmparr2)\n        //console.log(tmparr2);\n    })\n\n    useEffect(() => {\n      fetch('https://hidden-dusk-28735.herokuapp.com/')\n              .then(res=>res.json())\n              .then(json=>{\n                setArr(json.data)\n              })\n    },[])\n\n    console.log(arr)\n    return (<div>\n        <ul>\n        <li>Hello Leo.</li>\n        </ul>\n\n        <p>Slider + Chart testing</p>\n        <div style={{height:\"20vh\"}}>\n        <Bar \n            data={{\n                labels: ['Red','Blue','Yellow','Green','Purple','Orange'],\n                datasets: [{\n                    label: '# of votes',\n                    data: [val,19,3,5,2,3],\n                    backgroundColor: ['red','blue','yellow','green','purple','orange']\n                },\n                ],\n            }}\n            height={400}\n            width={600}\n            options={{maintainAspectRatio: false,}}\n        />\n        <div style={{textAlign:\"center\",width:\"70vw\"}}>\n        <Slider value={val} onChange={updateRange}/>\n        </div>\n        </div>\n        <br></br>\n        <p>Data import from <a href=\"https://hidden-dusk-28735.herokuapp.com/\">https://hidden-dusk-28735.herokuapp.com/</a></p>\n        <div style={{height:\"20vh\"}}>\n        <Bar\n            data={{\n                labels: ['Red','Blue','Yellow','Green','Purple','Orange'],\n                datasets: [{\n                    label: '# of votes',\n                    data: arr,\n                    backgroundColor: ['red','blue','yellow','green','purple','orange']\n                },\n                ],\n            }}\n            height={200}\n            width={600}\n            options={{maintainAspectRatio: false,}}\n        />\n        </div>\n\n        </div>)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nconst reactContentRoot = document.getElementById(\"root\")\n\nReactDOM.render(<App/>, reactContentRoot)\n"],"sourceRoot":""}