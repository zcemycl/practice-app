{"version":3,"sources":["components/App.js","index.js"],"names":["App","useState","val","setVal","arr","setArr","arr2","setArr2","socket","io","connect","reconnection","useEffect","on","msg","currentData","length","shift","number","fetch","then","res","json","data","style","height","labels","datasets","label","backgroundColor","width","options","maintainAspectRatio","textAlign","Slider","value","onChange","e","href","target","LineChart","slice","Math","max","Line","type","dataKey","stroke","CartesianGrid","XAxis","YAxis","Tooltip","reactContentRoot","document","getElementById","ReactDOM","render"],"mappings":"6RAmGeA,EA7FH,WAAO,IAAD,EACOC,mBAAS,IADhB,mBACPC,EADO,KACHC,EADG,OAKOF,mBAAS,IALhB,mBAKPG,EALO,KAKHC,EALG,OAMSJ,mBAAS,IANlB,mBAMPK,EANO,KAMFC,EANE,KAORC,EAASC,IAAGC,QAAQ,+CAClB,CAACC,cAAc,IA2BvB,OAvBAC,qBAAU,WACRJ,EAAOK,GAAG,aAAY,SAACC,GAEnBP,GAAQ,SAACQ,GAKP,OAJIA,EAAYC,QAAU,IACtBD,EAAYE,QAGV,GAAN,mBAAWF,GAAX,CAAuB,CAAC,GAAKD,EAAII,kBAGvC,IAGFN,qBAAU,WACRO,MAAM,4CACGC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAE,GACJjB,EAAOiB,EAAKC,WAEtB,IAGM,gCACJ,6BACA,8CAGA,uDACA,sBAAKC,MAAO,CAACC,OAAO,QAApB,UACA,cAAC,MAAD,CACIF,KAAM,CACFG,OAAQ,CAAC,MAAM,OAAO,SAAS,QAAQ,SAAS,UAChDC,SAAU,CAAC,CACPC,MAAO,aACPL,KAAM,CAACrB,EAAI,GAAG,EAAE,EAAE,EAAE,GACpB2B,gBAAiB,CAAC,MAAM,OAAO,SAAS,QAAQ,SAAS,aAIjEJ,OAAQ,IACRK,MAAO,IACPC,QAAS,CAACC,qBAAqB,KAEnC,qBAAKR,MAAO,CAACS,UAAU,SAASH,MAAM,QAAtC,SACA,cAACI,EAAA,EAAD,CAAQC,MAAOjC,EAAKkC,SAvDN,SAACC,EAAEd,GACjBpB,EAAOoB,WAyDP,uBACA,kDAAoB,mBAAGe,KAAK,2CAA2CC,OAAO,SAA1D,yDACpB,qBAAKf,MAAO,CAACC,OAAO,QAApB,SACA,cAAC,MAAD,CACIF,KAAM,CACFG,OAAQ,CAAC,MAAM,OAAO,SAAS,QAAQ,SAAS,UAChDC,SAAU,CAAC,CACPC,MAAO,aACPL,KAAMnB,EACNyB,gBAAiB,CAAC,MAAM,OAAO,SAAS,QAAQ,SAAS,aAIjEJ,OAAQ,IACRK,MAAO,IACPC,QAAS,CAACC,qBAAqB,OAInC,kDAAoB,mBAAGM,KAAK,0DAA0DC,OAAO,SAAzE,wEACpB,qBAAKf,MAAO,CAACC,OAAO,OAAOK,MAAM,QAAjC,SACE,eAACU,EAAA,EAAD,CAAWV,MAAO,IAAKL,OAAQ,IAAKF,KAAMjB,EAAKmC,MAAMC,KAAKC,IAAIrC,EAAKU,OAAO,GAAG,IAA7E,UACE,cAAC4B,EAAA,EAAD,CAAMC,KAAK,WAAWC,QAAQ,KAAKC,OAAO,YAC1C,cAACC,EAAA,EAAD,CAAeD,OAAO,SACtB,cAACE,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,aCxFNC,EAAmBC,SAASC,eAAe,QAEjDC,IAASC,OAAO,cAAC,EAAD,IAAQJ,K","file":"static/js/main.3000e3ba.chunk.js","sourcesContent":["import React,{ useState,useEffect } from \"react\";\nimport { Bar } from 'react-chartjs-2'; \nimport { Slider } from \"@material-ui/core\";\nimport io from 'socket.io-client';\nimport {Line,LineChart,XAxis,YAxis,Tooltip,CartesianGrid} from 'recharts';\n\nconst App = () => {\n    const [val,setVal] = useState(12)\n    const updateRange=(e,data)=>{\n        setVal(data)\n    }\n    const [arr,setArr] = useState([])\n    const [arr2,setArr2] = useState([])\n    const socket = io.connect('https://hidden-dusk-28735.herokuapp.com/test',\n            {reconnection: true, \n            //transports: ['websocket']\n    });\n\n    useEffect(() => {\n      socket.on('newnumber',(msg)=>{\n          //console.log(msg.number);\n          setArr2((currentData) => {\n            if (currentData.length >= 15){\n                currentData.shift();\n            }\n            \n            return [...currentData,{'uv':msg.number}]});\n      })\n      //console.log(arr2);\n    },[])\n\n\n    useEffect(() => {\n      fetch('https://hidden-dusk-28735.herokuapp.com/')\n              .then(res=>res.json())\n              .then(json=>{\n                setArr(json.data)\n              })\n    },[])\n\n    //console.log(arr)\n    return (<div>\n        <ul>\n        <li>Hello Leo.</li>\n        </ul>\n\n        <p>Slider + Chart testing</p>\n        <div style={{height:\"20vh\"}}>\n        <Bar \n            data={{\n                labels: ['Red','Blue','Yellow','Green','Purple','Orange'],\n                datasets: [{\n                    label: '# of votes',\n                    data: [val,19,3,5,2,3],\n                    backgroundColor: ['red','blue','yellow','green','purple','orange']\n                },\n                ],\n            }}\n            height={400}\n            width={600}\n            options={{maintainAspectRatio: false,}}\n        />\n        <div style={{textAlign:\"center\",width:\"70vw\"}}>\n        <Slider value={val} onChange={updateRange}/>\n        </div>\n        </div>\n        <br></br>\n        <p>Data import from <a href=\"https://hidden-dusk-28735.herokuapp.com/\" target=\"_blank\">https://hidden-dusk-28735.herokuapp.com/</a></p>\n        <div style={{height:\"20vh\"}}>\n        <Bar\n            data={{\n                labels: ['Red','Blue','Yellow','Green','Purple','Orange'],\n                datasets: [{\n                    label: '# of votes',\n                    data: arr,\n                    backgroundColor: ['red','blue','yellow','green','purple','orange']\n                },\n                ],\n            }}\n            height={200}\n            width={600}\n            options={{maintainAspectRatio: false,}}\n        />\n        </div>\n\n        <p>Data import from <a href=\"https://hidden-dusk-28735.herokuapp.com/getrealtimedata\" target=\"_blank\">https://hidden-dusk-28735.herokuapp.com/getrealtimedata</a></p>\n        <div style={{height:\"20vh\",width:\"80vw\"}}>\n          <LineChart width={600} height={200} data={arr2.slice(Math.max(arr2.length-10,0))}>\n            <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" />\n            <CartesianGrid stroke=\"#ccc\" />\n            <XAxis />\n            <YAxis />\n            <Tooltip />\n          </LineChart>\n        </div>\n\n        </div>)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nconst reactContentRoot = document.getElementById(\"root\")\n\nReactDOM.render(<App/>, reactContentRoot)\n"],"sourceRoot":""}