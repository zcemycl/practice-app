{"version":3,"sources":["components/ProGraph/FetchPlot/styles.js","components/ProGraph/FetchPlot/FetchPlot.jsx","components/ProGraph/UIPlot/styles.js","components/ProGraph/UIPlot/UIPlot.jsx","components/ProGraph/SocketPlot/SocketPlot.jsx","components/ProGraph/ProGraph.jsx","App.js","index.js"],"names":["makeStyles","theme","FetchPlot","useState","arr","setArr","useStyles","useEffect","fetch","then","res","json","data","Card","style","maxWidth","height","labels","datasets","label","backgroundColor","width","CardContent","display","UIPlot","val","setVal","Slider","value","onChange","e","valueLabelDisplay","min","max","marks","SocketPlot","socket","io","connect","reconnection","on","msg","currentData","length","shift","number","ResponsiveContainer","aspect","AreaChart","Area","type","dataKey","stroke","fill","CartesianGrid","XAxis","fontSize","YAxis","Tooltip","ProGraph","React","activeStep","setActiveStep","useTheme","position","Grid","container","justify","direction","spacing","padding","step","xs","sm","md","lg","switchPlot","MobileStepper","steps","variant","nextButton","Button","size","onClick","prevActiveStep","disabled","maxSteps","KeyboardArrowLeft","KeyboardArrowRight","backButton","styles","root","fontFamily","textAlign","top","left","right","bottom","background","justifyContent","alignItems","overflow","App","reactContentRoot","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.d55f9206.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n\n}));","import React,{ useState,useEffect } from \"react\";\nimport useStyles from './styles';\nimport { Bar } from 'react-chartjs-2'; \nimport { Card, CardMedia, CardContent, CardActions, Typography, IconButton } from '@material-ui/core';\n\nconst FetchPlot = () => {\n    const [arr,setArr] = useState([]);\n    const classes = useStyles();\n    \n    useEffect(() => {\n        fetch('https://hidden-dusk-28735.herokuapp.com/')\n                .then(res=>res.json())\n                .then(json=>{\n                  setArr(json.data)\n                })\n    },[]);\n    \n    return (\n        <Card style={{maxWidth:'100%', height: '100%'}}>\n            \n            <Bar\n                data={{\n                    labels: ['Jan','Feb','Mar','Apr','May','Jun'],\n                    datasets: [{\n                        label: '# of votes',\n                        data: arr,\n                        backgroundColor: 'rgba(0, 181, 204, 1) '\n                    },\n                    ],\n                }}\n                height={'35%'}\n                width={'35%'}\n            />\n            <CardContent style={{display:'flex'}}>\n            {/* <Typography>\n                Data import from \n                <a href=\"https://hidden-dusk-28735.herokuapp.com/\" target=\"_blank\">\n                 https://hidden-dusk-28735.herokuapp.com/\n                </a>\n            </Typography> */}\n            </CardContent>\n        </Card>\n    )\n}\n\nexport default FetchPlot\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n\n}));","import React, { useState } from \"react\";\nimport useStyles from './styles';\nimport { Bar } from 'react-chartjs-2'; \nimport { Slider } from \"@material-ui/core\";\nimport { Card, CardMedia, CardContent, CardActions, Typography, IconButton } from '@material-ui/core';\n\nconst UIPlot = () => {\n    const classes = useStyles();\n    const updateRange=(e,data)=>{\n        setVal(data)\n    }\n    const marks = [{value:0,label:'0'},\n                    {value:5,label:'5'},\n                    {value:20,label:'20'}]\n    const [val,setVal] = useState(5);\n    return (\n        <Card style={{maxWidth:'100%', height: '100%'}}>   \n            <Bar \n                data={{\n                    labels: ['Red','Blue','Yellow','Green','Purple','Orange'],\n                    datasets: [{\n                        label: '# of votes',\n                        data: [val,10,3,5,2,3],\n                        backgroundColor: \"rgba(137, 196, 244, 1)\",\n                    },\n                    ],\n                }}\n                height={'35%'}\n                width={'35%'}\n            />\n            \n            <CardContent style={{display:'flex'}}>\n                <Slider value={val} onChange={updateRange}\n                    valueLabelDisplay=\"auto\" min={0}\n                    max={20}\n                    marks={marks}/>\n                {/* <br></br>\n                <Typography>\n                    Slider + Chart testing\n                </Typography> */}\n            </CardContent>\n        </Card>\n    )\n}\n\nexport default UIPlot\n","import React,{ useState,useEffect } from \"react\";\nimport io from 'socket.io-client';\nimport {Area,AreaChart,XAxis,YAxis,Tooltip,CartesianGrid,ResponsiveContainer} from 'recharts';\nimport { Card, CardMedia, CardContent, CardActions, Typography, IconButton } from '@material-ui/core';\n\nconst SocketPlot = () => {\n    const [arr,setArr] = useState([]);\n    const socket = io.connect('https://hidden-dusk-28735.herokuapp.com/test',{reconnection: true});\n    //const socket = io.connect('http://127.0.0.1:5000/test',{reconnection: true});\n    //const socket = io.connect('http://127.0.0.1:5000/test');\n     useEffect(() => {\n        socket.on('newnumber',(msg)=>{\n            setArr((currentData) => {\n            if (currentData.length >= 10){\n                currentData.shift();\n            }\n            \n            return [...currentData,{'uv':msg.number}]});\n        })\n     },[]);\n    return (\n        <Card style={{maxWidth:'100%', height: '100%'}}>\n            <ResponsiveContainer width='95%'  aspect={0.95}>\n                \n                <AreaChart \n                    data={arr}>\n                    <Area type=\"monotone\" \n                        dataKey=\"uv\" \n                        stroke=\"#8884d8\" \n                        fill=\"#8884d8\" />\n                    <CartesianGrid stroke=\"#ccc\" />\n                    <XAxis fontSize=\"0.8em\"/>\n                    <YAxis fontSize=\"0.8em\" width={30}/>\n                    <Tooltip />\n                </AreaChart>\n            </ResponsiveContainer>\n\n            \n            {/* <CardContent style={{display:'flex'}}>\n            <Typography>\n                Data import from \n                <a href=\"https://hidden-dusk-28735.herokuapp.com/getrealtimedata\" target=\"_blank\">\n                    https://hidden-dusk-28735.herokuapp.com/getrealtimedata\n                    </a>\n            </Typography>\n            </CardContent> */}\n        </Card>\n\n    )\n}\n\nexport default SocketPlot\n","import React from 'react';\nimport FetchPlot from './FetchPlot/FetchPlot';\nimport UIPlot from './UIPlot/UIPlot';\nimport SocketPlot from './SocketPlot/SocketPlot';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\nimport { MobileStepper, Paper, Typography, Button} from '@material-ui/core';\nimport { KeyboardArrowRight, KeyboardArrowLeft } from '@material-ui/icons';\n\nconst ProGraph = () => {\n    const [activeStep, setActiveStep] = React.useState(0);\n    const theme = useTheme();\n    const maxSteps = 3;\n    const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n      };\n    \n    const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleStepChange = (step) => {\n    setActiveStep(step);\n    };\n    const switchPlot = (step) => {\n        switch (step) {\n            case 0:\n                return (<Grid xs={12} sm={6} md={4} lg={3}><SocketPlot/></Grid>);\n            case 1:\n                return (<Grid xs={12} sm={6} md={4} lg={3}><UIPlot/></Grid>);\n            case 2:\n                return (<Grid xs={12} sm={6} md={4} lg={3}><FetchPlot/></Grid>)\n        }\n    };\n\n    return (\n        <div style={{position:'relative'}}>          \n            <Grid container \n                justify=\"center\" \n                direction=\"row\"\n                spacing={0}\n                style={{padding: '12% 0 0 0'}}>\n                {switchPlot(activeStep)}\n                <Grid  container\n                    justify=\"center\" \n                    direction=\"row\"\n                    spacing={0}>\n                    <Grid xs={12} sm={6} md={4} lg={3}><MobileStepper\n                        steps={maxSteps}\n                        position=\"static\"\n                        variant=\"text\"\n                        activeStep={activeStep}\n                        nextButton={\n                        <Button size=\"small\" onClick={handleNext} disabled={activeStep === maxSteps - 1}>\n                            Next\n                            {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n                        </Button>\n                        }\n                        backButton={\n                        <Button size=\"small\" onClick={handleBack} disabled={activeStep === 0}>\n                            {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n                            Back\n                        </Button>\n                        }\n                    /></Grid>\n                </Grid>\n            </Grid>\n\n        </div>\n    )\n}\n\nexport default ProGraph\n","import React from \"react\";\nimport { ProGraph } from './components';\nimport Particles from 'react-particles-js';\nimport particlesConfig from './config/particlesConfig';\n\nconst styles = {\n    root: {\n        fontFamily: \"sans-serif\",\n        textAlign: \"center\",\n        top: 0, left: 0, right: 0, bottom: 0,\n        height: \"100%\",\n        background: \"#222\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        position:'absolute',\n        overflow:'hidden',\n    }\n};\n\nconst App = () => {\n    return (\n        <div>     \n            <div style={styles.root}>\n                <Particles height=\"100vh\" width=\"100vw\"/>               \n            </div>\n            {<ProGraph/>}\n        </div>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nconst reactContentRoot = document.getElementById(\"root\")\n\nReactDOM.render(<App/>, reactContentRoot)\n"],"sourceRoot":""}