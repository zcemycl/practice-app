{"version":3,"sources":["components/App.js","index.js"],"names":["App","useState","val","setVal","arr","setArr","useEffect","fetch","then","res","json","console","log","data","style","height","labels","datasets","label","backgroundColor","width","options","maintainAspectRatio","textAlign","Slider","value","onChange","e","href","reactContentRoot","document","getElementById","ReactDOM","render"],"mappings":"uLA6EeA,EAzEH,WAAO,IAAD,EACOC,mBAAS,IADhB,mBACPC,EADO,KACHC,EADG,OAKOF,mBAAS,IALhB,mBAKPG,EALO,KAKHC,EALG,KAwBd,OAlBAC,qBAAU,WAERC,MAAM,4CACGC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAE,GACJC,QAAQC,IAAIF,GACZ,IAAMG,EAAOH,EAAKG,KAClBF,QAAQC,IAAIC,GACZR,EAAOQ,QAQjB,IACFF,QAAQC,IAAIR,GACJ,gCACJ,+BACA,oCACA,qCACA,2CAGA,uDACA,sBAAKU,MAAO,CAACC,OAAO,QAApB,UACA,cAAC,MAAD,CACIF,KAAM,CACFG,OAAQ,CAAC,MAAM,OAAO,SAAS,QAAQ,SAAS,UAChDC,SAAU,CAAC,CACPC,MAAO,aACPL,KAAM,CAACX,EAAI,GAAG,EAAE,EAAE,EAAE,GACpBiB,gBAAiB,CAAC,MAAM,OAAO,SAAS,QAAQ,SAAS,aAIjEJ,OAAQ,IACRK,MAAO,IACPC,QAAS,CAACC,qBAAqB,KAEnC,qBAAKR,MAAO,CAACS,UAAU,SAASH,MAAM,QAAtC,SACA,cAACI,EAAA,EAAD,CAAQC,MAAOvB,EAAKwB,SA9CN,SAACC,EAAEd,GACjBV,EAAOU,WAgDP,uBACA,kDAAoB,mBAAGe,KAAK,2CAAR,yDACpB,qBAAKd,MAAO,CAACC,OAAO,QAApB,SACA,cAAC,MAAD,CACIF,KAAM,CACFG,OAAQ,CAAC,MAAM,OAAO,SAAS,QAAQ,SAAS,UAChDC,SAAU,CAAC,CACPC,MAAO,aACPL,KAAMT,EACNe,gBAAiB,CAAC,MAAM,OAAO,SAAS,QAAQ,SAAS,aAIjEJ,OAAQ,IACRK,MAAO,IACPC,QAAS,CAACC,qBAAqB,WClErCO,EAAmBC,SAASC,eAAe,QAEjDC,IAASC,OAAO,cAAC,EAAD,IAAQJ,K","file":"static/js/main.de5916f6.chunk.js","sourcesContent":["import React,{ useState,useEffect } from \"react\";\nimport { Bar } from 'react-chartjs-2'; \nimport { Slider } from \"@material-ui/core\";\n\nconst App = () => {\n    const [val,setVal] = useState(12)\n    const updateRange=(e,data)=>{\n        setVal(data)\n    }\n    const [arr,setArr] = useState([])\n    useEffect(() => {\n\n      fetch('https://hidden-dusk-28735.herokuapp.com/')\n              .then(res=>res.json())\n              .then(json=>{\n                console.log(json)\n                const data = json.data\n                console.log(data)\n                setArr(data)\n              })\n              //.then((valarr) => {\n              //  const newarr = valarr.map((product) => {\n              //      return product.data\n              //  })\n              //  setArr(newarr)\n              //})\n    },[])\n    console.log(arr)\n    return (<div>\n        <ul>\n        <li>Hi</li>\n        <li>Bye</li>\n        <li>Friend</li>\n        </ul>\n\n        <p>Slider + Chart testing</p>\n        <div style={{height:\"30vh\"}}>\n        <Bar \n            data={{\n                labels: ['Red','Blue','Yellow','Green','Purple','Orange'],\n                datasets: [{\n                    label: '# of votes',\n                    data: [val,19,3,5,2,3],\n                    backgroundColor: ['red','blue','yellow','green','purple','orange']\n                },\n                ],\n            }}\n            height={400}\n            width={600}\n            options={{maintainAspectRatio: false,}}\n        />\n        <div style={{textAlign:\"center\",width:\"70vw\"}}>\n        <Slider value={val} onChange={updateRange}/>\n        </div>\n        </div>\n        <br></br>\n        <p>Data import from <a href=\"https://hidden-dusk-28735.herokuapp.com/\">https://hidden-dusk-28735.herokuapp.com/</a></p>\n        <div style={{height:\"30vh\"}}>\n        <Bar\n            data={{\n                labels: ['Red','Blue','Yellow','Green','Purple','Orange'],\n                datasets: [{\n                    label: '# of votes',\n                    data: arr,\n                    backgroundColor: ['red','blue','yellow','green','purple','orange']\n                },\n                ],\n            }}\n            height={200}\n            width={600}\n            options={{maintainAspectRatio: false,}}\n        />\n        </div>\n\n        </div>)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\n\nconst reactContentRoot = document.getElementById(\"root\")\n\nReactDOM.render(<App/>, reactContentRoot)\n"],"sourceRoot":""}