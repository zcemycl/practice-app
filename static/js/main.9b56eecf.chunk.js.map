{"version":3,"sources":["components/UIPlot/styles.js","components/UIPlot/UIPlot.jsx","components/FetchPlot/styles.js","components/FetchPlot/FetchPlot.jsx","components/SocketPlot/SocketPlot.jsx","App.js","index.js"],"names":["makeStyles","theme","UIPlot","useStyles","useState","val","setVal","style","height","data","labels","datasets","label","backgroundColor","width","options","maintainAspectRatio","textAlign","Slider","value","onChange","e","FetchPlot","arr","setArr","useEffect","fetch","then","res","json","href","target","SocketPlot","arr2","setArr2","socket","io","connect","reconnection","on","msg","currentData","length","shift","number","LineChart","slice","Math","max","Line","type","dataKey","stroke","CartesianGrid","XAxis","YAxis","Tooltip","App","reactContentRoot","document","getElementById","ReactDOM","render"],"mappings":"4LAEeA,eAAW,SAACC,GAAD,MAAY,M,yBCmCvBC,EAhCA,WACKC,IAAhB,IADiB,EAKIC,mBAAS,IALb,mBAKVC,EALU,KAKNC,EALM,KAMjB,OACI,gCACI,uDACJ,sBAAKC,MAAO,CAACC,OAAO,QAApB,UACA,cAAC,MAAD,CACIC,KAAM,CACFC,OAAQ,CAAC,MAAM,OAAO,SAAS,QAAQ,SAAS,UAChDC,SAAU,CAAC,CACPC,MAAO,aACPH,KAAM,CAACJ,EAAI,GAAG,EAAE,EAAE,EAAE,GACpBQ,gBAAiB,CAAC,MAAM,OAAO,SAAS,QAAQ,SAAS,aAIjEL,OAAQ,IACRM,MAAO,IACPC,QAAS,CAACC,qBAAqB,KAEnC,qBAAKT,MAAO,CAACU,UAAU,SAASH,MAAM,QAAtC,SACA,cAACI,EAAA,EAAD,CAAQC,MAAOd,EAAKe,SAvBN,SAACC,EAAEZ,GACjBH,EAAOG,eCNAT,eAAW,SAACC,GAAD,MAAY,MCqCvBqB,EAnCG,WAAO,IAAD,EACClB,mBAAS,IADV,mBACbmB,EADa,KACTC,EADS,KAEJrB,IAUhB,OARAsB,qBAAU,WACNC,MAAM,4CACGC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAE,GACJL,EAAOK,EAAKpB,WAExB,IAGE,gCACI,kDAAoB,mBAAGqB,KAAK,2CAA2CC,OAAO,SAA1D,yDACpB,qBAAKxB,MAAO,CAACC,OAAO,QAApB,SACA,cAAC,MAAD,CACIC,KAAM,CACFC,OAAQ,CAAC,MAAM,OAAO,SAAS,QAAQ,SAAS,UAChDC,SAAU,CAAC,CACPC,MAAO,aACPH,KAAMc,EACNV,gBAAiB,CAAC,MAAM,OAAO,SAAS,QAAQ,SAAS,aAIjEL,OAAQ,IACRM,MAAO,IACPC,QAAS,CAACC,qBAAqB,W,gFCGhCgB,EA/BI,WAAO,IAAD,EACE5B,mBAAS,IADX,mBACd6B,EADc,KACTC,EADS,KAEfC,EAASC,IAAGC,QAAQ,+CAA+C,CAACC,cAAc,IAaxF,OAVCb,qBAAU,WACPU,EAAOI,GAAG,aAAY,SAACC,GACnBN,GAAQ,SAACO,GAKT,OAJIA,EAAYC,QAAU,IACtBD,EAAYE,QAGV,GAAN,mBAAWF,GAAX,CAAuB,CAAC,GAAKD,EAAII,kBAEtC,IAEC,gCACI,kDAAoB,mBAAGd,KAAK,0DAA0DC,OAAO,SAAzE,wEACpB,qBAAKxB,MAAO,CAACC,OAAO,OAAOM,MAAM,QAAjC,SACA,eAAC+B,EAAA,EAAD,CAAW/B,MAAO,IAAKN,OAAQ,IAAKC,KAAMwB,EAAKa,MAAMC,KAAKC,IAAIf,EAAKS,OAAO,GAAG,IAA7E,UACI,cAACO,EAAA,EAAD,CAAMC,KAAK,WAAWC,QAAQ,KAAKC,OAAO,YAC1C,cAACC,EAAA,EAAD,CAAeD,OAAO,SACtB,cAACE,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,aCZDC,EAbH,WAGR,OAAQ,gCAEJ,cAAC,EAAD,IACA,uBACA,cAAC,EAAD,IACA,cAAC,EAAD,QCPFC,EAAmBC,SAASC,eAAe,QAEjDC,IAASC,OAAO,cAAC,EAAD,IAAQJ,K","file":"static/js/main.9b56eecf.chunk.js","sourcesContent":["import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n\n}));","import React, { useState } from \"react\";\nimport useStyles from './styles';\nimport { Bar } from 'react-chartjs-2'; \nimport { Slider } from \"@material-ui/core\";\n\nconst UIPlot = () => {\n    const classes = useStyles();\n    const updateRange=(e,data)=>{\n        setVal(data)\n    }\n    const [val,setVal] = useState(12);\n    return (\n        <div>\n            <p>Slider + Chart testing</p>\n        <div style={{height:\"20vh\"}}>\n        <Bar \n            data={{\n                labels: ['Red','Blue','Yellow','Green','Purple','Orange'],\n                datasets: [{\n                    label: '# of votes',\n                    data: [val,19,3,5,2,3],\n                    backgroundColor: ['red','blue','yellow','green','purple','orange']\n                },\n                ],\n            }}\n            height={400}\n            width={600}\n            options={{maintainAspectRatio: false,}}\n        />\n        <div style={{textAlign:\"center\",width:\"70vw\"}}>\n        <Slider value={val} onChange={updateRange}/>\n        </div>\n        </div>\n        </div>\n    )\n}\n\nexport default UIPlot\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles((theme) => ({\n\n}));","import React,{ useState,useEffect } from \"react\";\nimport useStyles from './styles';\nimport { Bar } from 'react-chartjs-2'; \n\nconst FetchPlot = () => {\n    const [arr,setArr] = useState([]);\n    const classes = useStyles();\n    \n    useEffect(() => {\n        fetch('https://hidden-dusk-28735.herokuapp.com/')\n                .then(res=>res.json())\n                .then(json=>{\n                  setArr(json.data)\n                })\n    },[]);\n    \n    return (\n        <div>\n            <p>Data import from <a href=\"https://hidden-dusk-28735.herokuapp.com/\" target=\"_blank\">https://hidden-dusk-28735.herokuapp.com/</a></p>\n            <div style={{height:\"20vh\"}}>\n            <Bar\n                data={{\n                    labels: ['Red','Blue','Yellow','Green','Purple','Orange'],\n                    datasets: [{\n                        label: '# of votes',\n                        data: arr,\n                        backgroundColor: ['red','blue','yellow','green','purple','orange']\n                    },\n                    ],\n                }}\n                height={200}\n                width={600}\n                options={{maintainAspectRatio: false,}}\n            />\n            </div>\n        </div>\n    )\n}\n\nexport default FetchPlot\n","import React,{ useState,useEffect } from \"react\";\nimport io from 'socket.io-client';\nimport {Line,LineChart,XAxis,YAxis,Tooltip,CartesianGrid} from 'recharts';\n\nconst SocketPlot = () => {\n    const [arr2,setArr2] = useState([]);\n    const socket = io.connect('https://hidden-dusk-28735.herokuapp.com/test',{reconnection: true});\n    //const socket = io.connect('http://127.0.0.1:5000/test',{reconnection: true});\n    //const socket = io.connect('http://127.0.0.1:5000/test');\n     useEffect(() => {\n        socket.on('newnumber',(msg)=>{\n            setArr2((currentData) => {\n            if (currentData.length >= 15){\n                currentData.shift();\n            }\n            \n            return [...currentData,{'uv':msg.number}]});\n        })\n     },[]);\n    return (\n        <div>\n            <p>Data import from <a href=\"https://hidden-dusk-28735.herokuapp.com/getrealtimedata\" target=\"_blank\">https://hidden-dusk-28735.herokuapp.com/getrealtimedata</a></p>\n            <div style={{height:\"20vh\",width:\"80vw\"}}>\n            <LineChart width={600} height={200} data={arr2.slice(Math.max(arr2.length-10,0))}>\n                <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#8884d8\" />\n                <CartesianGrid stroke=\"#ccc\" />\n                <XAxis />\n                <YAxis />\n                <Tooltip />\n            </LineChart>\n            </div>\n        </div>\n    )\n}\n\nexport default SocketPlot\n","import React from \"react\";\nimport { UIPlot, FetchPlot, SocketPlot } from './components';\n\nconst App = () => {\n\n\n    return (<div>\n\n        <UIPlot/>\n        <br></br>\n        <FetchPlot/>\n        <SocketPlot/>\n\n        </div>)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nconst reactContentRoot = document.getElementById(\"root\")\n\nReactDOM.render(<App/>, reactContentRoot)\n"],"sourceRoot":""}